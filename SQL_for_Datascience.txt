Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table =10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table = 10000
ix. review table = 10000 
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 8090 (Business_id)
vi. Checkin = 493
vii. Photo = 6493
viii. Tip = 3979 (Business_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
SELECT *
FROM user
WHERE id IS NULL OR 
name IS NULL OR review_count IS NULL OR yelping_since IS NULL OR USEFUL IS NULL OR funny IS NULL OR cool IS NULL OR fans IS NULL OR average_stars IS NULL OR compliment_hot IS NULL OR compliment_more IS NULL OR compliment_profile IS NULL OR compliment_cute IS NULL OR compliment_list IS NULL OR compliment_note IS NULL OR compliment_plain IS NULL OR compliment_cool IS NULL OR compliment_funny IS NULL OR compliment_writer IS NULL OR compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995 
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT city, review_count
	FROM business
	ORDER BY review_count DESC
	
	
	Copy and Paste the Result Below:
	city       | review_count |
+------------+--------------+
| Las Vegas  |         3873 |
| Montréal   |         1757 |
| Gilbert    |         1549 |
| Las Vegas  |         1410 |
| Las Vegas  |         1389 |
| Las Vegas  |         1252 |
| Las Vegas  |         1116 |
| Las Vegas  |         1084 |
| Las Vegas  |          961 |
| Gilbert    |          902 |
| Las Vegas  |          864 |
| Scottsdale |          823 |
| Las Vegas  |          821 |
| Las Vegas  |          786 |
| Henderson  |          785 |
| Toronto    |          778 |
| Las Vegas  |          768 |
| Las Vegas  |          758 |
| Scottsdale |          726 |
| Cleveland  |          723 |
| Las Vegas  |          720 |
| Charlotte  |          715 |
| Phoenix    |          711 |
| Las Vegas  |          706 |
| Phoenix    |          700 |
+------------+--------------+
(Output limit exceeded, 25 of 3120 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT stars AS Star_rating, COUNT (*) AS count
FROM business
WHERE city IS "Avon"
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| Star_rating | count |
+-------------+-------+
|         1.5 |     1 |
|         2.5 |     2 |
|         3.5 |     3 |
|         4.0 |     2 |
|         4.5 |     1 |
|         5.0 |     1 |
+-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:
SELECT stars AS Star_rating, COUNT (*) AS count
FROM business
WHERE city IS "Beachwood"
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-------+
| Star_rating | count |
+-------------+-------+
|         2.0 |     1 |
|         2.5 |     1 |
|         3.0 |     2 |
|         3.5 |     2 |
|         4.0 |     1 |
|         4.5 |     2 |
|         5.0 |     5 |
+-------------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT name, review_count
	FROM user
	ORDER BY review_count DESC
		
	Copy and Paste the Result Below:
	+-----------+--------------+
| name      | review_count |
+-----------+--------------+
| Gerald    |         2000 |
| Sara      |         1629 |
| Yuri      |         1339 |
		


8. Does posing more reviews correlate with more fans?
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |

	Please explain your findings and interpretation of the results: Based on above table, it can be seen 
that review count for Sara is 1629 and Yuri is 1339 but the number of fans for Yuri is high, that is 76. So 
Review count is not directly proportinal to number of fans.
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Total number of reviews are 10000, and out of them only 1958 have words like love or hate
So the number is very low (roughly 20%)

	
	SQL code used to arrive at answer:
--number of reviews with love or hate in them

SELECT COUNT(text)
FROM review
WHERE text LIKE ("%love%") OR text LIKE ("%hate%")

--total number of reviews

SELECT COUNT(text)
FROM review

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name, fans
	FROM user	
	ORDER BY fans DESC

	
	Copy and Paste the Result Below:
 name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes, the category selected was shopping and it was divided into two parts, More star rating (>3) and less star rating. 
The one with less is walgreens which remains open till 10 pm, while others are closed by 5 pm only.


ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes, the number os reviews are diffrent for two groups.   
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
NO, latitude and longitude dont provide any specific information.

SQL code used for analysis:
SELECT b.city
	,b.stars
	,b.name
	,b.review_count
	,b.longitude
	,b.latitude
	,h.hours
	,c.category
	,CASE --this will help to divide data on the basis of stars
		WHEN stars <= 3 
			THEN "less"
		WHEN stars >= 3
			THEN "more"
		END AS "Star_rating"
FROM (
	(
		business AS b INNER JOIN hours AS h ON b.id = h.business_id
		INNER JOIN category AS c ON b.id = c.business_id
		)
	)
WHERE city = "Las Vegas" -- city of choice
	AND category = "Shopping" --category of choice
GROUP BY name
ORDER BY stars ASC
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
Average review count for open : 31.76 is higher than of closed, which is 23.2

+---------+---------------+---------------+
| is_open |      R__COUNT |  AVG__RATINGS |
+---------+---------------+---------------+
|       0 | 23.1980263158 | 3.52039473684 |
|       1 | 31.7570754717 | 3.67900943396 
         
         
ii. Difference 2:
Average star rating for open is 3.68 which is higher than that of closed, which is 3.52.

         
         
         
SQL code used for analysis:
SELECT is_open
	,AVG(review_count) AS R__COUNT
	,AVG(stars) AS AVG__RATINGS --this helps to get average review count and average star rating
FROM business
WHERE is_open = 0
	OR is_open = 1
GROUP BY is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
I would like to analyse if the freww WiFi or kids friendly business have any advantage. 
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The data I will need is average star rating of the business in with 2 attributes, Goodfor kids and wifi. It is usually considered that free wifi will attract more people and 
business which are kids frindly have high rating. 
                           
                  
iii. Output of your finished dataset:
+-------------+--------------------------+
| name        | value and avg-star       |
+-------------+--------------------------+
| GoodForKids | 0----3.125               |
| GoodForKids | 1----3.41666666666667    |
| WiFi        | free----3.08333333333333 |
| WiFi        | no----3.65384615384615   |
| WiFi        | paid----3.5              |
+-------------+--------------------------+
The results say that while places which kids friendly have higher average rating, free wifi doesnot provide any addon benefits to the business. Average rating with
business with free wifi is less that that of no/paid wifi.
         
         
iv. Provide the SQL code you used to create your final dataset:
SELECT a.name
	,(a.value || "----" || AVG(b.stars)) AS "value and avg-star" --this will help to connect the value of attribute with the average start rating of that business
FROM attribute a
INNER JOIN business b ON a.business_id = b.id
WHERE a.name IS "GoodForKids"
	OR a.name IS "WiFi"
GROUP BY a.value